#RUN: llc %s -mcpu=a64fx -fswp -O1  -start-before=aarch64-swpipeliner  -swpl-max-preg=1 -swpl-debug -o /dev/null 2>&1 | FileCheck %s

#CHECK:        : (Iterative Modulo Scheduling. ResMII 2. NumOfBodyInsts 6. Budget 300. Minimum II = 2.)
#CHECK:        :  (x) Run out of budget      at estimation.          : (II: 2 in [ 2,1000]) MVE: 0 Last inst: 3. (Itr Org: 0, Req: 0) (VReg Fp: 0/0, Int: 0/0, Pre: 0/0) Eval:0.000000e+00.
#CHECK:        :  (x) Run out of budget      at estimation.          : (II: 3 in [ 2,1000]) MVE: 0 Last inst: 4. (Itr Org: 0, Req: 0) (VReg Fp: 0/0, Int: 0/0, Pre: 0/0) Eval:0.000000e+00.
#CHECK:        :  (x) Run out of budget      at estimation.          : (II: 5 in [ 2,1000]) MVE: 0 Last inst: 4. (Itr Org: 0, Req: 0) (VReg Fp: 0/0, Int: 0/0, Pre: 0/0) Eval:0.000000e+00.
#CHECK:        :  (x) Run out of budget      at estimation.          : (II: 9 in [ 2,1000]) MVE: 0 Last inst: 4. (Itr Org: 0, Req: 0) (VReg Fp: 0/0, Int: 0/0, Pre: 0/0) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at estimation.          : (II: 13 in [ 2,1000]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        : Change ii range for moderate schedule search:[ 2, 1000 ] -> [ 14, 26 ]
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 14 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 16 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 18 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 20 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 22 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
#CHECK:        :  (@) Scheduling tight       at recollect moderate.  : (II: 24 in [ 14,26]) MVE: 2 Last inst: 0. (Itr Org: 0, Req: 2) (VReg Fp: 0/32, Int: 6/32, Pre: 1/1) Eval:0.000000e+00.
--- |
  ; ModuleID = '/TEST/tp/testprg.c'
  source_filename = "/TEST/tp/testprg.c"
  target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64-unknown-linux-gnu"
  
  ; Function Attrs: nofree norecurse nounwind
  define dso_local i32 @fuga(i32* nocapture %0, i32* nocapture readonly %1, i32 %2) local_unnamed_addr #0 !dbg !7 {
    %4 = icmp sgt i32 %2, 0, !dbg !10
    br i1 %4, label %5, label %7, !dbg !11
  
  5:                                                ; preds = %3
    %6 = zext i32 %2 to i64, !dbg !10
    call void @llvm.set.loop.iterations.i64(i64 %6), !dbg !11
    br label %10, !dbg !11
  
  7:                                                ; preds = %10, %3
    %8 = getelementptr inbounds i32, i32* %0, i64 99, !dbg !12
    %9 = load i32, i32* %8, align 4, !dbg !12, !tbaa !13
    ret i32 %9, !dbg !17
  
  10:                                               ; preds = %10, %5
    %11 = phi i32* [ %16, %10 ], [ %1, %5 ]
    %12 = phi i32* [ %15, %10 ], [ %0, %5 ]
    %13 = phi i64 [ %6, %5 ], [ %17, %10 ], !dbg !18
    %14 = load i32, i32* %11, align 4, !dbg !18, !tbaa !13
    store i32 %14, i32* %12, align 4, !dbg !19, !tbaa !13
    %15 = getelementptr i32, i32* %12, i64 1, !dbg !10
    %16 = getelementptr i32, i32* %11, i64 1, !dbg !10
    %17 = call i64 @llvm.loop.decrement.reg.i64(i64 %13, i64 1), !dbg !11
    %18 = icmp ne i64 %17, 0, !dbg !11
    br i1 %18, label %10, label %7, !dbg !11, !llvm.loop !20
  }
  
  ; Function Attrs: noduplicate nounwind
  declare void @llvm.set.loop.iterations.i64(i64) #1
  
  ; Function Attrs: noduplicate nounwind
  declare i64 @llvm.loop.decrement.reg.i64(i64, i64) #1
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nofree norecurse nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="a64fx" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rdm,+sha2,+sve,+v8.2a" "unsafe-fp-math"="true" "use-soft-float"="false" }
  attributes #1 = { noduplicate nounwind }
  attributes #2 = { nounwind }
  
  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!3, !4, !5}
  !llvm.ident = !{!6}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 11.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !2, splitDebugInlining: false, nameTableKind: None)
  !1 = !DIFile(filename: "/TEST/tp/testprg.c", directory: "/TEST")
  !2 = !{}
  !3 = !{i32 7, !"Dwarf Version", i32 4}
  !4 = !{i32 2, !"Debug Info Version", i32 3}
  !5 = !{i32 1, !"wchar_size", i32 4}
  !6 = !{!"clang version 11.0.0 "}
  !7 = distinct !DISubprogram(name: "fuga", scope: !8, file: !8, line: 1, type: !9, scopeLine: 1, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
  !8 = !DIFile(filename: "tp/testprg.c", directory: "/TEST")
  !9 = !DISubroutineType(types: !2)
  !10 = !DILocation(line: 2, column: 21, scope: !7)
  !11 = !DILocation(line: 2, column: 3, scope: !7)
  !12 = !DILocation(line: 7, column: 10, scope: !7)
  !13 = !{!14, !14, i64 0}
  !14 = !{!"int", !15, i64 0}
  !15 = !{!"omnipotent char", !16, i64 0}
  !16 = !{!"Simple C/C++ TBAA"}
  !17 = !DILocation(line: 7, column: 3, scope: !7)
  !18 = !DILocation(line: 4, column: 12, scope: !7)
  !19 = !DILocation(line: 4, column: 10, scope: !7)
  !20 = distinct !{!20, !11, !21, !22}
  !21 = !DILocation(line: 5, column: 3, scope: !7)
  !22 = !{!"llvm.loop.unroll.disable"}

...
---
name:            fuga
alignment:       8
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:
  - { id: 0, class: gpr64all, preferred-register: '' }
  - { id: 1, class: gpr64sp, preferred-register: '' }
  - { id: 2, class: gpr64sp, preferred-register: '' }
  - { id: 3, class: gpr64sp, preferred-register: '' }
  - { id: 4, class: gpr64all, preferred-register: '' }
  - { id: 5, class: gpr64all, preferred-register: '' }
  - { id: 6, class: gpr64all, preferred-register: '' }
  - { id: 7, class: gpr64common, preferred-register: '' }
  - { id: 8, class: gpr64, preferred-register: '' }
  - { id: 9, class: gpr32common, preferred-register: '' }
  - { id: 10, class: gpr32, preferred-register: '' }
  - { id: 11, class: gpr32, preferred-register: '' }
  - { id: 12, class: gpr64sp, preferred-register: '' }
  - { id: 13, class: gpr32, preferred-register: '' }
  - { id: 14, class: gpr64sp, preferred-register: '' }
  - { id: 15, class: gpr64, preferred-register: '' }
  - { id: 16, class: gpr32, preferred-register: '' }
liveins:
  - { reg: '$x0', virtual-reg: '%7' }
  - { reg: '$x1', virtual-reg: '%8' }
  - { reg: '$w2', virtual-reg: '%9' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    successors: %bb.1(0x50000000), %bb.2(0x30000000)
    liveins: $x0, $x1, $w2
  
    %9:gpr32common = COPY $w2
    %8:gpr64 = COPY $x1
    %7:gpr64common = COPY $x0
    dead $wzr = SUBSWri %9, 1, 0, implicit-def $nzcv, debug-location !11
    Bcc 11, %bb.2, implicit $nzcv, debug-location !11
    B %bb.1, debug-location !11
  
  bb.1 (%ir-block.5):
    successors: %bb.3(0x80000000)
  
    %11:gpr32 = ORRWrs $wzr, %9, 0, debug-location !10
    %0:gpr64all = SUBREG_TO_REG 0, killed %11, %subreg.sub_32, debug-location !10
    B %bb.3, debug-location !11
  
  bb.2 (%ir-block.7):
    %16:gpr32 = LDRWui %7, 99, debug-location !12 :: (load 4 from %ir.8, !tbaa !13)
    $w0 = COPY %16, debug-location !17
    RET_ReallyLR implicit $w0, debug-location !17
  
  bb.3 (%ir-block.10):
    successors: %bb.3(0x7c000000), %bb.2(0x04000000)
  
    %1:gpr64sp = PHI %8, %bb.1, %5, %bb.3
    %2:gpr64sp = PHI %7, %bb.1, %4, %bb.3
    %3:gpr64sp = PHI %0, %bb.1, %6, %bb.3, debug-location !18
    early-clobber %12:gpr64sp, %13:gpr32 = LDRWpost %1, 4, debug-location !18
    early-clobber %14:gpr64sp = STRWpost killed %13, %2, 4, debug-location !19 :: (store 4 into %ir.12, !tbaa !13)
    %4:gpr64all = COPY %14, debug-location !10
    %5:gpr64all = COPY %12, debug-location !10
    %15:gpr64 = SUBSXri %3, 1, 0, implicit-def $nzcv, debug-location !11
    %6:gpr64all = COPY %15, debug-location !11
    Bcc 1, %bb.3, implicit $nzcv, debug-location !11
    B %bb.2, debug-location !11

...
